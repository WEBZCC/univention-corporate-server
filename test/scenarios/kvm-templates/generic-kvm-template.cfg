[Global]
logfile: generic-kvm-template.log
kvm_server: [ENV:KVM_BUILD_SERVER]
kvm_user: [ENV:KVM_USER]
kvm_architecture: amd64
kvm_ucsversion: empty
kvm_template: 50GiB
kvm_operating_system: Others
kvm_interface: eth0
kvm_extra_label: generic-kvm-template-[ENV:UCS_VERSION]
kvm_connect: false
kvm_copy_files: false
kvm_iso: [ENV:SOURCE_ISO]
kvm_dhcp: 1
recover: 2

[master]
command1:
 # installation/update
 LOCAL python utils/installation_test/vnc-install-ucs.py --vnc "[master_VNC_DISPLAY]" --language deu --role applianceLVM --fqdn mytest
 COPY_FILES
 . utils.sh && add_tech_key_authorized_keys
 ucr set repository/online=yes repository/online/server='[ENV:REPOSITORY_SERVER]'
 . utils.sh && upgrade_to_latest_patchlevel
 univention-app register || true
 . utils.sh && upgrade_to_latest_patchlevel
 . utils.sh && do_reboot
 . utils.sh && wait_for_reboot
 univention-prune-kernels -v
 # appliance
 . base_appliance.sh && setup_appliance
 . base_appliance.sh && appliance_cleanup
 ucr set repository/online=yes repository/online/server='[ENV:REPOSITORY_SERVER]' nameserver1=192.168.0.124 nameserver2=192.168.0.97 timeserver='192.168.0.240 burst' timeserver2='nissedal.knut.univention.de burst' timeserver3='antilop.knut.univention.de burst' update/secure_apt=yes updater/identify="UCS (KVM)"
 usermod -p "$(mkpasswd -H sha-512 univention)" root
 echo "ucsver=@%@version/version@%@-@%@version/patchlevel@%@+$(if [ '[ENV:TESTING]' = true ];then date +'%Y-%m-%d';else echo e'@%@version/erratalevel@%@';fi)" | ucr filter >/tmp/ucs.ver
 GET /tmp/ucs.ver ucs.ver
 # stop the instance
 . base_appliance.sh && appliance_poweroff
 SSH_DISCONNECT
 SERVER virsh event --domain "[master_KVM_NAME]" --event lifecycle --timeout 120
 # remove cdrom
 SERVER virsh detach-disk --config --domain "[master_KVM_NAME]" hda
 # create template
 SOURCE ucs.ver
 SERVER ucs-kt-put -C single -O Others -c "[master_KVM_NAME]" "[ucsver]_generic-unsafe_amd64"
command2:
 LOCAL rm -f ucs.ver
