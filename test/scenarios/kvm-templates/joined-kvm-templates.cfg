[Global]
# These settings can be overwritten by the instance
logfile: autotest.log

# ucs-kt-get kvm settings
kvm_server: [ENV:KVM_BUILD_SERVER]
kvm_user: [ENV:KVM_USER]
kvm_dhcp: 1
kvm_interface: eth0
kvm_extra_label: joined-templates-[ENV:UCS_VERSION]
kvm_template: [ENV:KVM_TEMPLATE]
kvm_ucsversion: [ENV:KVM_UCSVERSION]
kvm_architecture: amd64

recover: 3

environment:
 UCS_VERSION=[ENV:UCS_VERSION]
 UCS_TEST_RUN=[ENV:UCS_TEST_RUN]
 RELEASE_UPDATE=[ENV:RELEASE_UPDATE]
 ERRATA_UPDATE=[ENV:ERRATA_UPDATE]
 TARGET_VERSION=[ENV:TARGET_VERSION]
 JENKINS_WS=[ENV:JOB_URL]

[master]
profile:
 hostname="master"
 domainname="autotest.local"
 windows/domain="AUTOTEST"
 ldap/base="dc=autotest,dc=local"
 root_password="univention"
 locale/default="de_DE.UTF-8:UTF-8"
 packages_install=""
 packages_remove=""
 server/role="domaincontroller_master"
command1:
 . utils.sh; basic_setup
 . utils.sh; add_tech_key_authorized_keys
 . utils.sh; rotate_logfiles
 . utils.sh; run_setup_join
command2:
 . utils.sh; import_license
 . utils.sh; assert_version "[ENV:TARGET_VERSION]"
 . utils.sh; assert_join
 if [ "x[ENV:TESTING]" = "xtrue" ];  then echo "ucsver=@%@version/version@%@-@%@version/patchlevel@%@+$(date +%Y-%m-%d)"          | ucr filter>/tmp/ucs.ver; fi
 if [ "x[ENV:TESTING]" = "xfalse" ]; then echo 'ucsver=@%@version/version@%@-@%@version/patchlevel@%@+e@%@version/erratalevel@%@' | ucr filter>/tmp/ucs.ver; fi
 GET /tmp/ucs.ver ucs.ver
 # stop the instance
 . base_appliance.sh && appliance_poweroff
 SSH_DISCONNECT
 SERVER virsh event --domain "[master_KVM_NAME]" --event lifecycle --timeout 120
 # create template
 SOURCE ucs.ver
 SERVER ucs-kt-put -C single -O Others -c "[master_KVM_NAME]" "[ucsver]_ucs-joined-master_amd64"
files:
 ~/ec2/license/license.secret /etc/

[backup]
profile:
 hostname=backup
 domainname=autotest.local
 windows/domain=AUTOTEST
 server/role="domaincontroller_backup"
 root_password=univention
 locale/default="de_DE.UTF-8:UTF-8"
 packages_install=""
 packages_remove=""
 nameserver=[master_IP]
command1:
 . utils.sh; basic_setup
 . utils.sh; add_tech_key_authorized_keys
 . utils.sh; rotate_logfiles
 ASYNC . utils.sh; run_setup_join_on_non_master
command2:
 . utils.sh; assert_version "[ENV:TARGET_VERSION]"
 if [ "x[ENV:TESTING]" = "xtrue" ];  then echo "ucsver=@%@version/version@%@-@%@version/patchlevel@%@+$(date +%Y-%m-%d)"          | ucr filter>/tmp/ucs.ver; fi
 if [ "x[ENV:TESTING]" = "xfalse" ]; then echo 'ucsver=@%@version/version@%@-@%@version/patchlevel@%@+e@%@version/erratalevel@%@' | ucr filter>/tmp/ucs.ver; fi
 GET /tmp/ucs.ver ucs.ver
 # stop the instance
 . base_appliance.sh && appliance_poweroff
 SSH_DISCONNECT
 SERVER virsh event --domain "[backup_KVM_NAME]" --event lifecycle --timeout 120
 # create template
 SOURCE ucs.ver
 SERVER ucs-kt-put -C single -O Others -c "[backup_KVM_NAME]" "[ucsver]_ucs-joined-backup_amd64"

[slave]
profile:
 hostname=slave
 domainname=autotest.local
 windows/domain=AUTOTEST
 server/role="domaincontroller_slave"
 root_password=univention
 locale/default="de_DE.UTF-8:UTF-8"
 packages_install=""
 packages_remove=""
 nameserver=[master_IP]
command1:
 . utils.sh; basic_setup
 . utils.sh; add_tech_key_authorized_keys
 . utils.sh; rotate_logfiles
 ASYNC . utils.sh; run_setup_join_on_non_master
command2:
 . utils.sh; assert_version "[ENV:TARGET_VERSION]"
 if [ "x[ENV:TESTING]" = "xtrue" ];  then echo "ucsver=@%@version/version@%@-@%@version/patchlevel@%@+$(date +%Y-%m-%d)"          | ucr filter>/tmp/ucs.ver; fi
 if [ "x[ENV:TESTING]" = "xfalse" ]; then echo 'ucsver=@%@version/version@%@-@%@version/patchlevel@%@+e@%@version/erratalevel@%@' | ucr filter>/tmp/ucs.ver; fi
 GET /tmp/ucs.ver ucs.ver
 # stop the instance
 . base_appliance.sh && appliance_poweroff
 SSH_DISCONNECT
 SERVER virsh event --domain "[slave_KVM_NAME]" --event lifecycle --timeout 120
 # create template
 SOURCE ucs.ver
 SERVER ucs-kt-put -C single -O Others -c "[slave_KVM_NAME]" "[ucsver]_ucs-joined-slave_amd64"

[member]
profile:
 hostname=member
 domainname=autotest.local
 windows/domain=AUTOTEST
 server/role="memberserver"
 root_password=univention
 locale/default="de_DE.UTF-8:UTF-8"
 packages_install=""
 packages_remove=""
 nameserver=[master_IP]
command1:
 . utils.sh; basic_setup
 . utils.sh; add_tech_key_authorized_keys
 . utils.sh; rotate_logfiles
 ASYNC . utils.sh; run_setup_join_on_non_master
command2:
 . utils.sh; assert_version "[ENV:TARGET_VERSION]"
 if [ "x[ENV:TESTING]" = "xtrue" ];  then echo "ucsver=@%@version/version@%@-@%@version/patchlevel@%@+$(date +%Y-%m-%d)"          | ucr filter>/tmp/ucs.ver; fi
 if [ "x[ENV:TESTING]" = "xfalse" ]; then echo 'ucsver=@%@version/version@%@-@%@version/patchlevel@%@+e@%@version/erratalevel@%@' | ucr filter>/tmp/ucs.ver; fi
 GET /tmp/ucs.ver ucs.ver
 # stop the instance
 . base_appliance.sh && appliance_poweroff
 SSH_DISCONNECT
 SERVER virsh event --domain "[member_KVM_NAME]" --event lifecycle --timeout 120
 # create template
 SOURCE ucs.ver
 SERVER ucs-kt-put -C single -O Others -c "[member_KVM_NAME]" "[ucsver]_ucs-joined-member_amd64"
