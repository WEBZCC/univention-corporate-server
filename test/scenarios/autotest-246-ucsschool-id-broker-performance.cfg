[EC2Tags]
usecase: dev-jenkins-ucs5.0

[Global]
# These settings can be overwritten by the instance
logfile: school-id-broker-performance.log

# ucs-kt-get kvm settings
kvm_server: [ENV:KVM_BUILD_SERVER]
kvm_user: [ENV:KVM_USER]
kvm_dhcp: 1
kvm_interface: eth0
kvm_extra_label: school-id-broker-performance-[ENV:UCS_VERSION]
kvm_architecture: amd64

recover: 13

environment:
 UCS_VERSION=[ENV:UCS_VERSION]
 UCS_TEST_RUN=[ENV:UCS_TEST_RUN]
 RELEASE_UPDATE=[ENV:RELEASE_UPDATE]
 ERRATA_UPDATE=[ENV:ERRATA_UPDATE]
 TARGET_VERSION=[ENV:TARGET_VERSION]
 JENKINS_WS=[ENV:JOB_URL]
 UCSSCHOOL_RELEASE=[ENV:UCSSCHOOL_RELEASE]
 JOB_NAME=[ENV:JOB_NAME]
 SCOPE=[ENV:SCOPE]

[idbroker]
kvm_template: [ENV:KVM_TEMPLATE]
kvm_ucsversion: [ENV:KVM_UCSVERSION]
kvm_vcpus: 16
kvm_memory: 8G
profile:
 hostname="idbroker"
 domainname="test.local"
 windows/domain="TEST"
 ldap/base="dc=test,dc=local"
 root_password="univention"
 locale/default="de_DE.UTF-8:UTF-8"
 server/role="domaincontroller_master"
command1:
 # Workaround for Bug 45950
 echo 'APT::Get::AllowUnauthenticated "true";' >> /etc/apt/apt.conf.d/00jenkinsworkaround
 . utils.sh; basic_setup
 . utils.sh; rotate_logfiles
 ucr set ldap/database/mdb/envflags=nosync connector/debug/level=2 umc/server/debug/level=4 umc/module/debug/level=4 connector/s4/retryrejected=2
 . utils.sh; add_tech_key_authorized_keys
 lsb_release -a
 free -m
 cat /proc/cpuinfo
 univention-install -y ntpdate
 ntpdate -u 192.168.0.3 192.168.0.10 192.168.0.124
 ASYNC . utils.sh; upgrade_to_latest_patchlevel
command2:
 . utils.sh; jenkins_updates
 ASYNC . utils.sh; upgrade_to_latest_test_errata && touch UCS_UPDATED
command3:
 univention-app info
 . utils.sh; assert_version "[ENV:TARGET_VERSION]" || shutdown 1 -P
 ASYNC . utils.sh; run_setup_join
command4:
 . utils.sh && do_reboot
 LOCAL sleep 120
 . utils.sh && wait_for_reboot
 . utils.sh; import_license
command5:
 # install ucsschool & kelvin
 . utils.sh && wait_for_reboot
 echo -n univention > /tmp/univention
 . utils.sh; set_administrator_dn_for_ucs_test; set_administrator_password_for_ucs_test univention
 # ucsschool=4.4v6: 1st ucsschool, 2nd kelvin
 # ucsschool=4.4v9?: 1st kelvin, 2nd ucsschool
 . utils.sh; UCSSCHOOL_RELEASE=appcenter.test install_ucsschool
 . utils.sh; prevent_ucstest_on_fail /root/schoolinstaller.py -u Administrator -p univention -M
 . utils.sh; install_apps ucsschool-kelvin-rest-api
 # . utils.sh; run_join_scripts
 # ucsschool=4.4v9?: univention-run-join-scripts --run-scripts --force 50ucsschool-kelvin-rest-api.inst
 univention-app info
 ASYNC . utils.sh; run_join_scripts
command6:
 # patch UDM REST API systemd unit (work around for bug #50050)
 sed --in-place 's/univention.admin.rest.server/univention.admin.rest -p 9979 -c 0 run/g' /lib/systemd/system/univention-directory-manager-rest.service
 systemctl daemon-reload
 systemctl restart univention-directory-manager-rest.service
command7:
 # setup ucschool-apis
 . utils.sh && switch_to_test_app_center || true
 . utils.sh; install_apps '4.4/ucsschool-apis=1.0.1'
 . utils.sh; run_join_scripts
command8:
 # setup id-broker-plugin
 echo 'deb [trusted=yes] http://omar.knut.univention.de/build2/ ucs_4.4-0-id-broker/all/' >> /etc/apt/sources.list.d/40_id-broker.list
 univention-install -y id-broker-plugin
 . utils.sh; run_join_scripts
 wget --no-check-certificate https://billy.knut.univention.de/~dtroeder/id-broker/example-plugin-main.tar.gz
 tar xzf example-plugin-main.tar.gz -C /var/lib/univention-appcenter/apps/ucsschool-apis/data/plugins/
 sed --in-place 's/"auth"/"auth", "echo"/g' /etc/ucsschool/apis/settings.json
 service docker-app-ucsschool-apis restart
command9:
 udm users/user create --position "cn=users,$(ucr get ldap/base)" --set username=id-broker-admin --set firstname="ID Broker" --set lastname="Admin User" --set password=univention
 udm users/user create --position "cn=users,$(ucr get ldap/base)" --set username=id-broker-kelvin-user --set firstname="ID Broker" --set lastname="Kelvin User" --set password=univention --append "groups=cn=ucsschool-kelvin-rest-api-admins,cn=groups,$(ucr get ldap/base)"
 echo '{ "mapped_udm_properties": ["brokerID"] }' > /var/lib/ucs-school-import/configs/kelvin.json
 cat /var/lib/ucs-school-import/configs/kelvin.json
 univention-app shell ucsschool-kelvin-rest-api /etc/init.d/ucsschool-kelvin-rest-api restart
 sleep 10
 curl -i -k -X POST https://127.0.0.1/ucsschool/kelvin/token -H "Content-Type:application/x-www-form-urlencoded" -d "username=id-broker-kelvin-user" -d "password=univention"; echo
 echo '{ "host": "[idbroker_IP]", "username": "id-broker-kelvin-user", "password": "univention", "verify_ssl": false }' > /etc/ucsschool/apis/id_broker/settings.json
 cat /etc/ucsschool/apis/id_broker/settings.json
 univention-app restart ucsschool-apis
 sleep 10
 curl -i -k -X POST https://[idbroker_IP]/ucsschool/apis/auth/token -H "Content-Type:application/x-www-form-urlencoded" -d "username=id-broker-admin" -d "password=univention"; echo
command10:
 for I in $(seq -w 20); do /usr/share/ucs-school-import/scripts/create_ou "Schule$I"; done
 wget --no-check-certificate https://billy.knut.univention.de/~dtroeder/id-broker/id_broker_hook.py -O /usr/share/ucs-school-import/pyhooks/id_broker_hook.py
 /usr/share/ucs-school-import/scripts/ucs-school-testuser-import --students 10000 --classes 500 Schule01 Schule02 Schule03 Schule04 Schule05 Schule06 Schule07 Schule08 Schule09 Schule10 Schule11 Schule12 Schule13 Schule14 Schule15 Schule16 Schule17 Schule18 Schule19 Schule20
 . utils.sh; wait_for_replication
command11:
 # run tests on locust host
command12:
 # ucs-test using /root/*.csv from locust host
 . utils.sh; install_ucs_test
 . utils.sh; install_with_unmaintained ucs-test-ucsschool
 . utils.sh; run_tests -s ucsschool-performance
command13:
 . utils.sh && prepare_results
 LOCAL utils/utils-local.sh fetch-results [idbroker_IP] idbroker
files:
 ~/ec2/license/license.secret /etc/
 ~/ec2/scripts/activate-errata-test-scope.sh /root/
 utils/utils-school.sh /root/


[locust]
kvm_template: ubuntu-desktop
kvm_ucsversion: 20.04
kvm_operating_system: Others
kvm_vcpus: 4
kvm_memory: 4G
command1:
 lsb_release -a
 free -m
 cat /proc/cpuinfo
 service unattended-upgrades stop
 . product-tests/domain-join/domain-join.sh && wait_for_automatic_update
 apt-get update
 DEBIAN_FRONTEND=noninteractive apt-get -y install python3-venv ntpdate
 ntpdate -u 192.168.0.3 192.168.0.10 192.168.0.124
command2:
 # fetch Locust job files
 # TODO: learn how to use git in Jenkins
 wget --no-check-certificate https://billy.knut.univention.de/~dtroeder/id-broker/locust_idbroker_user.py https://billy.knut.univention.de/~dtroeder/id-broker/locust_kelvin_user_create.py https://billy.knut.univention.de/~dtroeder/id-broker/locust_kelvin_user_get.py https://billy.knut.univention.de/~dtroeder/id-broker/locust_ucsschool_api_common.py https://billy.knut.univention.de/~dtroeder/id-broker/locust_ucsschool_api_echo.py https://billy.knut.univention.de/~dtroeder/id-broker/locust_udm_user_get.py https://billy.knut.univention.de/~dtroeder/id-broker/locust_udm_user_search.py
command3:
 # install Locust
 python3 -m venv venv_locust
 venv_locust/bin/pip install -U pip wheel
 venv_locust/bin/pip install locust ldap3 PyJWT Faker
 venv_locust/bin/locust --version
command4:
 echo 'root soft nofile 10240' >> /etc/security/limits.conf
 echo 'root hard nofile 10240' >> /etc/security/limits.conf
 echo "fs.file-max=1048576" > /etc/sysctl.d/99-file-max.conf
 sysctl -p
command6:
 # patch UDM REST API on UCS server
command7:
 # setup ucschool-apis on UCS server
command8:
 # setup id-broker-plugin on UCS server
command9:
 # configure kelvin and ucschool-apis on UCS server
command10:
 # create OUs and users on UCS server
command11:
 curl -i -k -X POST https://[idbroker_IP]/ucsschool/apis/auth/token -H "Content-Type:application/x-www-form-urlencoded" -d "username=id-broker-admin" -d "password=univention"; echo
 LDAP_SERVER="[idbroker_IP]" LDAP_BASE="dc=test,dc=local" venv_locust/bin/locust --locustfile locust_ucsschool_api_echo.py --host "[idbroker_IP]" --headless --users 16 --spawn-rate 1 --run-time 5m --stop-timeout 60 --csv=ucsschool_api_echo --html=ucsschool_api_echo.html --print-stats --exit-code-on-error 0
 sleep 20
 LDAP_SERVER="[idbroker_IP]" LDAP_BASE="dc=test,dc=local" venv_locust/bin/locust --locustfile locust_idbroker_user.py --host "[idbroker_IP]" --headless --users 16 --spawn-rate 1 --run-time 5m --stop-timeout 60 --csv=idbroker_user --html=idbroker_user.html --print-stats --exit-code-on-error 0
 sleep 20
 LDAP_SERVER="[idbroker_IP]" LDAP_BASE="dc=test,dc=local" venv_locust/bin/locust --locustfile locust_kelvin_user_get.py --host "[idbroker_IP]" --headless --users 16 --spawn-rate 1 --run-time 5m --stop-timeout 60 --csv=kelvin_user_get --html=kelvin_user_get.html --print-stats --exit-code-on-error 0
 sleep 20
 LDAP_SERVER="[idbroker_IP]" LDAP_BASE="dc=test,dc=local" venv_locust/bin/locust --locustfile locust_udm_user_search.py --host "[idbroker_IP]" --headless --users 16 --spawn-rate 1 --run-time 5m --stop-timeout 60 --csv=udm_user_search --html=udm_user_search.html --print-stats --exit-code-on-error 0
 sleep 20
 LDAP_SERVER="[idbroker_IP]" LDAP_BASE="dc=test,dc=local" venv_locust/bin/locust --locustfile locust_udm_user_get.py --host "[idbroker_IP]" --headless --users 16 --spawn-rate 1 --run-time 5m --stop-timeout 60 --csv=udm_user_get --html=udm_user_get.html --print-stats --exit-code-on-error 0
 sleep 20
 LDAP_SERVER="[idbroker_IP]" LDAP_BASE="dc=test,dc=local" venv_locust/bin/locust --locustfile locust_kelvin_user_create.py --host "[idbroker_IP]" --headless --users 16 --spawn-rate 1 --run-time 5m --stop-timeout 60 --csv=kelvin_user_create --html=kelvin_user_create.html --print-stats --exit-code-on-error 0
 scp -i /root/tech.pem -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no *.csv "root@[idbroker_IP]:"
command12:
 # ucs-test on server
command13:
 . utils.sh && prepare_results
 LOCAL utils/utils-local.sh fetch-results [locust_IP] locust
 LOCAL utils/utils-local.sh fetch-files "root@[locust_IP]" '*.csv' locust
 LOCAL utils/utils-local.sh fetch-files "root@[locust_IP]" '*.html' locust
files:
 ~/ec2/keys/tech.pem /root/
 ~/ec2/license/license.secret /etc/
 ~/ec2/scripts/activate-errata-test-scope.sh /root/
